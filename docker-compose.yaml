services:
  database:
    image: postgres:14
    container_name: database
    environment:
      POSTGRES_USER: docker_app
      POSTGRES_PASSWORD: docker_app
      POSTGRES_DB: docker_app_db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - starburger_net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "docker_app"]
      interval: 5s
      timeout: 5s
      retries: 3 

  backend:
    build:
      context: .
      dockerfile: Dockerfile/backend/Dockerfile
    container_name: backend
    environment:
      POSTGRES_HOST: database
    volumes:
      - ./media:/app/media
      - ./:/app
    working_dir: /app
    env_file:
      - ./star_burger/.env
    ports:
      - "8000:8000"
    networks:
      - starburger_net
    command: ["sh", "-c", "./commands.sh"]
    healthcheck:
      test: ["CMD-SHELL", "python manage.py check"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    depends_on:
      database:
        condition: service_healthy


  frontend:
    build:
      context: .
      dockerfile: Dockerfile/frontend/Dockerfile
    container_name: frontend
    volumes:
       - ./:/app
       - /app/node_modules
    working_dir: /app
    ports:
      - "3000:3000"
    networks:
      - starburger_net
    command: ["npx", "parcel", "watch", "bundles-src/index.js", "--dist-dir", "bundles", "--public-url", "./"]
    depends_on:
      database:
        condition: service_healthy


volumes:
  postgres:
    name: postgres

networks:
  starburger_net:
    name: starburger_net